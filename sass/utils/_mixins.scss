@mixin flexMid {
	display: flex;
	justify-content: center;
	align-items: center;
}

//width and height
@mixin wh($width, $heigt: $width) {
	width: $width;
	height: $heigt;
}

//media queries for specific min-width:
@mixin media($min-width) {
	@media only screen and (min-width: $min-width) {
		@content;
	}
}

//remove button style
@mixin btnstyle {
	border: none;
	outline-style: none;
}

//base for ::before / ::after elements
@mixin pseudo($display: block, $pos: absolute, $content: "") {
	content: $content;
	display: $display;
	position: $pos;
}

//Triangle for infobubbles
@mixin css-triangle(
	$color,
	$direction,
	$size: 6px,
	$position: absolute,
	$round: false
) {
	@include pseudo($pos: $position);
	width: 0;
	height: 0;
	@if $round {
		border-radius: 3px;
	}
	@if $direction == down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round($size / 2.5);
	} @else if $direction == up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - round($size / 2.5);
	} @else if $direction == right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	} @else if $direction == left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}

//mediaQueries W $breakpoints variables
@mixin mq($width, $type: min) {
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);
		@if $type == max {
			$width: $width - 1px;
		}
		@media only screen and (#{$type}-width: $width) {
			@content;
		}
	}
}

/* 
.site-header {
    padding: 2rem;
    font-size: 1.8rem;
    @include mq('phone-small') {
        padding-top: 4rem;
        font-size: 2.4rem;
    }
}
*/

//background animation
@mixin set-background-transition($initial, $hover, $inverted: false) {
	background: linear-gradient(
		90deg,
		$hover 0%,
		$hover 50%,
		$initial 50%,
		$initial 100%
	);
	background-repeat: no-repeat;
	background-size: 200% 100%;

	background-position: right bottom;
	@if $inverted {
		background-position: left bottom;
	}
	transition: background-position 0.25s ease-out;

	&:hover {
		background-position: left bottom;
		@if $inverted {
			background-position: right bottom;
		}
	}
}
//@include set-background-transition(#eb4034, #32a852);
